#include <iostream>
using namespace std;

// Códigos ANSI para colores del menu
#define RESET   "\033[0m"
#define RED     "\033[31m"      // Rojo
#define GREEN   "\033[32m"      // Verde
#define YELLOW  "\033[33m"      // Amarillo
#define BLUE    "\033[34m"      // Azul
#define MAGENTA "\033[35m"      // Magenta
#define CYAN    "\033[36m"      // Cian
#define WHITE   "\033[37m"      // Blanco

// Función para centrar el texto
void MensajeCentrado(const string &text) {
    int width = 80; 
    int padding = (width - text.length()) / 2;
    for (int i = 0; i < padding; ++i) cout << " ";
    cout << text << endl;
}

char menu() {
    char opcion = 0;
    MensajeCentrado(BLUE "*********************************************" RESET);
    MensajeCentrado(BLUE "*                                            *" RESET);
    MensajeCentrado(YELLOW "*           BIENVENIDO AL SISTEMA            *" RESET);
    MensajeCentrado(BLUE "*                                            *" RESET);
    MensajeCentrado(BLUE "**********************************************" RESET);
    MensajeCentrado(BLUE "*                                            *" RESET);
    MensajeCentrado(CYAN "*          Por favor, ingrese la opción      *" RESET);
    MensajeCentrado(BLUE "*                                            *" RESET);
    MensajeCentrado(BLUE "**********************************************" RESET);
    MensajeCentrado(BLUE "*                                            *" RESET);
    MensajeCentrado(GREEN "* 1). Crear cuentas monetarias               *" RESET);
    MensajeCentrado(GREEN "* 2). Operar depositos                       *" RESET);
    MensajeCentrado(GREEN "* 3). Operar retiros                         *" RESET);
    MensajeCentrado(GREEN "* 4). Transferencias                         *" RESET);
    MensajeCentrado(GREEN "* 5). Consulta saldo de cuenta               *" RESET);
    MensajeCentrado(RED   "* 6). Salir                                  *" RESET);
    MensajeCentrado(BLUE "*                                            *" RESET);
    MensajeCentrado(BLUE "**********************************************" RESET);
    cin >> opcion;
    return opcion;
}

int main() {
    char opcion;      // Variable para entrar a los apartados del menu o switch
    string CCMD;     // Variable para repetir la funcion de crear cuenta monetaria en el menu o switch
    string OPD;     // Variable para repetir la funcion de Operar depositos en el menu o switch
    string ORD;    // Variable para repetir la funcion de Operar retiros en el menu o switch
    string TD;    // Variable para repetir la funcion de Transferencias en el menu o switch
    string CSCD; // Variable para repetir la funcion de Consultar saldo de cuenta en el menu o switch 
    
    do {
        opcion = menu();
        switch (opcion) {
            case '1':
                do {
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*   Ha Seleccionado Crear Cuenta Monetaria   *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    //cout << crearCuentaMonetaria() << endl;
                    MensajeCentrado(RED "----------------------------------------------" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*     ¿Desea hacer otra cuenta monetaria?    *" RESET);
                    MensajeCentrado(YELLOW "*                    Si/No:                  *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    cin >> CCMD;
                } while (CCMD == "Si" || CCMD == "si");
                break;
            case '2':
                do {
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*       Ha Seleccionado Operar depositos     *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    //cout << depositos() << endl;
                    MensajeCentrado(RED "----------------------------------------------" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*          ¿Desea Operar otro deposito?      *" RESET);
                    MensajeCentrado(YELLOW "*                    Si/No:                  *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    cin >> OPD;
                } while (OPD == "Si" || OPD == "si");
                break;
            case '3':
                do {
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*       Ha Seleccionado Operar retiros       *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    //cout << retiros() << endl;
                    MensajeCentrado(RED "----------------------------------------------" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*           ¿Desea Operar otro retiro?       *" RESET);
                    MensajeCentrado(YELLOW "*                    Si/No:                  *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    cin >> ORD;
                } while (ORD == "Si" || ORD == "si");
                break;
            case '4':
                do {
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*       Ha Seleccionado Transferencias       *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    //cout << transferencias() << endl;
                    MensajeCentrado(RED "----------------------------------------------" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*        ¿Desea hacer otra Transferencia?    *" RESET);
                    MensajeCentrado(YELLOW "*                    Si/No:                  *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    cin >> TD;
                } while (TD == "Si" || TD == "si");
                break;
            case '5':
                do {
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                 Ha seleccionado            *" RESET);
                    MensajeCentrado(GREEN "*           Consulta Saldo de Cuenta         *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "*                                            *" RESET);
                    MensajeCentrado(GREEN "**********************************************" RESET);
                    //cout << consultaSaldo() << endl;
                    MensajeCentrado(RED "----------------------------------------------" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "*        ¿Desea Consultar saldo de nuevo?    *" RESET);
                    MensajeCentrado(YELLOW "*                    Si/No:                  *" RESET);
                    MensajeCentrado(YELLOW "*                                            *" RESET);
                    MensajeCentrado(YELLOW "**********************************************" RESET);
                    cin >> CSCD;
                } while (CSCD == "Si" || CSCD == "si");
                break;
            case '6':
                MensajeCentrado(GREEN "**********************************************" RESET);
                MensajeCentrado(GREEN "*                                            *" RESET);
                MensajeCentrado(GREEN "*                                            *" RESET);
                MensajeCentrado(GREEN "*             Saliendo del programa          *" RESET);
                MensajeCentrado(GREEN "*--------------------------------------------*" RESET);
                MensajeCentrado(GREEN "*                                            *" RESET);
                MensajeCentrado(GREEN "**********************************************" RESET);
                break;
            default:
                MensajeCentrado(RED "**********************************************" RESET);
                MensajeCentrado(RED "*                                            *" RESET);
                MensajeCentrado(RED "*                                            *" RESET);
                MensajeCentrado(RED "*               Opcion no valida             *" RESET);
                MensajeCentrado(RED "*             !Intente Nuevamente!           *" RESET);
                MensajeCentrado(RED "*                                            *" RESET);
                MensajeCentrado(RED "**********************************************" RESET);
        }
    } while (opcion != '6');
    return 0;
}
